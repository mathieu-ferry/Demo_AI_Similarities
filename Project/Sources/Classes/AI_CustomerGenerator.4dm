property systemPrompt : Text
property customerGenBot : cs.AIKit.OpenAIChatHelper
property responseData : Text
property UICallback_onProgress : 4D.Function
property UICallback_onTerminate : 4D.Function
property failedAttempts : Integer
property maxFailedAttempts : Integer
property startMillisecond : Integer
property timing : Integer

Class extends AI_Agent

singleton Class constructor()
	var $addressExpectedSchema : Object
	var $customerExpectedSchema : Object
	
	Super()
	This.responseData:=""
	$addressExpectedSchema:={streetNumber: "number as string"; streetName: "street name"; apartment: "number as string"; building: "building as string"; poBox: "po box as string"; city: "city"; region: "region as string"; postalCode: "postal code as string"; country: "country"}
	$customerExpectedSchema:={firstname: "firstname"; lastname: "lastname"; email: "firstname.lastname@randomdomain.com"; phone: "random phone number as string"; address: $addressExpectedSchema}
	This.systemPrompt:="You are a data generating assistant. Your answers are used to populate a database. Your answers are stricly JSON formatted, no greetings, no conclusion, just pure json."+\
		"I will ask you to generate a json object to populate a customer table. "+\
		"The json object must have the following schema: "+JSON Stringify($customerExpectedSchema)+". "+\
		"avoid generic names like john doe, prefer realistic ones. "+\
		"avoid generic email domains like example.com, prefer realistic ones. "+\
		"While  not all address attributes are mandatory, a general rule for an address to be valid is:\n"+\
		"*- streetName AND(streetNumber OR building OR poBox)\n"+\
		"*- city\n"+\
		"*- postalCode\n"+\
		"*- country"
	
Function onStreamChatReceive($result : cs.AIKit.OpenAIChatCompletionsResult)
	var $AIResponse : Object
	var $customer : cs.customerEntity
	var $me:=cs.AI_CustomerGenerator.me
	
	If ($result.success)
		If ($result.terminated)
			$me.UICallback_onProgress.call(Form; "\n\nAI response completed\n")
			$AIResponse:=$me.getAIStructuredResponseFromText($me.responseData; Is object)
			
			If ($AIResponse.success)
				$me.timing:=Milliseconds-$me.startMillisecond
				$customer:=ds.customer.newCustomerFromObject($AIResponse.response)
				$me.UICallback_onTerminate.call(Form; $customer; $me.timing)
			Else   //bad format generated by AI
				$me.failedAttempts+=1
				$me.UICallback_onProgress.call(Form; "AI did not respond with the expected format.\n")
				If ($me.failedAttempts<$me.maxFailedAttempts)
					$me.prompt()
				End if 
			End if 
		Else   //$result.terminated = false
			$me.responseData+=$result.choice.delta.text
			$me.UICallback_onProgress.call(Form; $result.choice.delta.text)
		End if 
		
	Else   //$result.success = false
		throw(999; "Problem querying AI provider, please try again")
	End if 
	
	
Function prompt()
	var $prompt : Text
	
	$prompt:="generate 1 customer"
	This.responseData:=""
	This.UICallback_onProgress.call(Form; "Prompt : "+$prompt+"\n\n")
	This.customerGenBot.prompt($prompt)
	
Function generateCustomerAsync($callback : Object)
	var $options : cs.AIKit.OpenAIChatCompletionsParameters
	
	This.failedAttempts:=0
	This.maxFailedAttempts:=3
	This.UICallback_onProgress:=$callback.onProgress
	This.UICallback_onTerminate:=$callback.onTerminate
	
	$options:=cs.AIKit.OpenAIChatCompletionsParameters.new()
	$options.stream:=True
	$options.formula:=This.onStreamChatReceive
	$options.model:=This.model
	
	This.startMillisecond:=Milliseconds
	This.customerGenBot:=This.AIClient.chat.create(This.systemPrompt; $options)
	This.UICallback_onProgress.call(Form; "System prompt : "+This.systemPrompt+"\n\n")
	
	This.prompt()
	
	
	
	
	
	